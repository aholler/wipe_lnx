From f09f5b61b160cf5ed6953339da974bccc22c73c0 Mon Sep 17 00:00:00 2001
From: Alexander Holler <holler@ahsoftware.de>
Date: Sun, 15 Feb 2015 20:05:52 +0100
Subject: [PATCH 2/4] WIP: fs: implement blkdev_issue_wipe() and
 sb_issue_wipe()

Signed-off-by: Alexander Holler <holler@ahsoftware.de>
---
 block/blk-lib.c        | 18 ++++++++++++++++++
 include/linux/blkdev.h |  9 +++++++++
 2 files changed, 27 insertions(+)

diff --git a/block/blk-lib.c b/block/blk-lib.c
index 7688ee3..b3c381c 100644
--- a/block/blk-lib.c
+++ b/block/blk-lib.c
@@ -141,6 +141,24 @@ int blkdev_issue_discard(struct block_device *bdev, sector_t sector,
 }
 EXPORT_SYMBOL(blkdev_issue_discard);
 
+/* Used to destroy the contents of given sectors */
+int blkdev_issue_wipe(struct block_device *bdev, sector_t sector,
+		sector_t nr_sects, gfp_t gfp_mask)
+{
+	/* First try "secure trim" */
+	int rc = blkdev_issue_discard(bdev, sector, nr_sects, gfp_mask,
+					BLKDEV_DISCARD_SECURE);
+	if (rc != -EOPNOTSUPP)
+		return rc;
+	/* then try a normal trim */
+	rc = blkdev_issue_discard(bdev, sector, nr_sects, gfp_mask, 0);
+	if (rc != -EOPNOTSUPP)
+		return rc;
+	/* no support for trim, just overwrite the sectors */
+	return blkdev_issue_zeroout(bdev, sector, nr_sects, gfp_mask, true);
+}
+EXPORT_SYMBOL(blkdev_issue_wipe);
+
 /**
  * blkdev_issue_write_same - queue a write same operation
  * @bdev:	target blockdev
diff --git a/include/linux/blkdev.h b/include/linux/blkdev.h
index 7f9a516..d686d65 100644
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@ -1166,6 +1166,15 @@ extern int blkdev_issue_write_same(struct block_device *bdev, sector_t sector,
 		sector_t nr_sects, gfp_t gfp_mask, struct page *page);
 extern int blkdev_issue_zeroout(struct block_device *bdev, sector_t sector,
 		sector_t nr_sects, gfp_t gfp_mask, bool discard);
+extern int blkdev_issue_wipe(struct block_device *bdev, sector_t sector,
+		sector_t nr_sects, gfp_t gfp_mask);
+static inline int sb_issue_wipe(struct super_block *sb, sector_t block,
+		sector_t nr_blocks, gfp_t gfp_mask)
+{
+	return blkdev_issue_wipe(sb->s_bdev, block << (sb->s_blocksize_bits - 9),
+				    nr_blocks << (sb->s_blocksize_bits - 9),
+				    gfp_mask);
+}
 static inline int sb_issue_discard(struct super_block *sb, sector_t block,
 		sector_t nr_blocks, gfp_t gfp_mask, unsigned long flags)
 {
-- 
2.0.5

